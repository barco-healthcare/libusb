language: c
sudo: required
dist: focal

os:
  - osx
  - linux

compiler:
  - clang
  - gcc

env:
  global:
    # Print output of failed unit test
    - CTEST_OUTPUT_ON_FAILURE=True
    - BUILD_NAME=master

  matrix:
    - BUILD_TYPE=Debug
    - BUILD_TYPE=Release

matrix:
  exclude:
    - os: linux
      compiler: clang
    - os: osx
      compiler: gcc

addons:
  homebrew:
    packages:
    - ruby
    - conan
    - python3
    - cmake
    update: true
  apt:
    sources:
    packages:
    - ruby
    - cppcheck


install:
  - export BARCOHC_BIN=https://${BIN_USER}:${BIN_PASSWORD}@barcohc.jfrog.io/barcohc

  # Install conan
  - |
    if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
      brew link --overwrite python@3.8
    fi
  - pip3 install --quiet conan
  - conan remote add barco https://barcohc.jfrog.io/barcohc/api/conan/barco
  - conan user -p ${CONAN_API_KEY} -r barco conan

script:
  - export PROJECT_NAME=`echo $TRAVIS_REPO_SLUG | cut -d / -f2`
  - if [ -n "$TRAVIS_TAG" ]; then BUILD_NAME=`echo ${TRAVIS_TAG} | sed "s/[vV]//g"`; fi
  - conan create ${TRAVIS_BUILD_DIR} ${PROJECT_NAME}/${BUILD_NAME}@barco/healthcare -s build_type=${BUILD_TYPE}
  - |
    # Create and upload a conan package for a release
    if [ -n "$TRAVIS_TAG" ] || [ "${TRAVIS_BRANCH}" == "master" ]; then
      conan upload --remote barco --all ${PROJECT_NAME}/${BUILD_NAME}@barco/healthcare
    fi

